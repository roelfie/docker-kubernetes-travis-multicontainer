version: '3'
# The service names are use as 'hostname' for the running containers.
services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
  redis:
    image: 'redis:latest'
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: nginx
    ports:
      - '3050:80'
    # If you run into "connect() failed (111: Connection refused) while connecting to upstream" try the following:
#    depends_on:
#      - api
#      - client
  api:
    # The server project was configured to listen on port 5000 (see index.js)
    build:
      dockerfile: Dockerfile.dev
      context: server
    volumes:
      # /app/node_modules is a volume inside the container (not mapped to host); /app maps to ./server on the host.
      - /app/node_modules
      - ./server:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  client:
    # By default, this 'Create React App' runs on port 3000
    build:
      dockerfile: Dockerfile.dev
      context: client
    volumes:
      - /app/node_modules
      - ./client:/app
    environment:
      - WDS_SOCKET_PORT=0
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379

